package com.example.hakimjohnson97.connectfour;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.support.annotation.Nullable;
import android.util.AttributeSet;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;

/**
 * Created by hakimjohnson97 on 4/21/17.
 */

public class Connect4View extends View {

    private Connect4Model mModel;
    private Connect4Controller mController;

    private Context mContext;
    private Paint mPaint;

    private float bottomLeftX;
    private float bottomLeftY;
    private float gridWidth;
    private float gridHeight;

    private static final float padding = 0.1f;

    private static final int backgroundColor = 0xFF64DCFF;


    public Connect4View(Context context, @Nullable AttributeSet attrs) {

        super(context, attrs);
        mContext = context;

        setBackgroundColor(backgroundColor);

        //Sets up the paint specs
        mPaint = new Paint();
        mPaint.setAntiAlias(true);
        mPaint.setColor(Color.RED);
        mPaint.setStyle(Paint.Style.FILL);
        mPaint.setStrokeJoin(Paint.Join.ROUND);
        mPaint.setStrokeWidth(4f);
    }

    public void setModel(Connect4Model model) {
        mModel = model;
    }

    public void setController(Connect4Controller controller) {
        mController = controller;
    }

    @Override
    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
        super.onSizeChanged(w, h, oldw, oldh);

        bottomLeftX = 0;
        bottomLeftY = h;
        gridWidth = w/ Connect4Model.BOARD_WIDTH;
        gridHeight = gridWidth;

    }

    @Override
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);

        if (mModel == null) {
            return;
        }
        
        Connect4Model.Color board[][] = mModel.getBoard();

        for (int i = 0; i < Connect4Model.BOARD_WIDTH; i++) {
            for (int j = 0; j < Connect4Model.BOARD_HEIGHT; j++) {
                if (board[i][j] == Connect4Model.Color.EMPTY) {
                    mPaint.setColor(Color.WHITE);
                }
                else if (board[i][j] == Connect4Model.Color.RED) {
                    mPaint.setColor(Color.RED);
                }
                else if (board[i][j] == Connect4Model.Color.YELLOW) {
                    mPaint.setColor(Color.YELLOW);
                }

                canvas.drawOval(bottomLeftX + (gridWidth*(i+padding)), bottomLeftY - (gridHeight*(j+1-padding)),
                        bottomLeftX + (gridWidth*(i+1-padding)), bottomLeftY - (gridHeight*(j+padding)), mPaint);
            }
        }

    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
        float x = event.getX();
        float y = event.getY();

        if (event.getAction() == MotionEvent.ACTION_DOWN) {

        }
        else if (event.getAction() == MotionEvent.ACTION_MOVE) {

        }
        else if (event.getAction() == MotionEvent.ACTION_UP) {
            int column = (int) (x/gridWidth);
            if (column == Connect4Model.BOARD_WIDTH) {
                column--;
            }
            mController.userTouchedScreen(column);

            Log.d("TAGG", "Hello");
        }
        else {
            return false;
        }

        invalidate();

        return true;
    }
}
